package app;

import static spark.Spark.*;

import java.util.HashMap;

import dao.UsuarioDAO;
import model.Usuario;
import spark.ModelAndView;
import spark.Request;
import spark.Response;
import spark.template.velocity.VelocityTemplateEngine;

public class HelloWorld {
	static UsuarioDAO dao = new UsuarioDAO();
	static Usuario usuarioLogado = null;
	public static void main(String[] args) {
		port(4568);
		dao.getAll();
		VelocityTemplateEngine vte = new VelocityTemplateEngine();
		staticFiles.location("/public");
		get("/home", HelloWorld::home, vte);
		get("/login", HelloWorld::login, vte);
        get("/cadastro", HelloWorld::cadastro, vte);
        post("/cadastro", HelloWorld::generateCadastro);
        
    }
	
	public static ModelAndView home(Request req, Response res) {
		HashMap<String, Object> model = new HashMap<>();
//		if(usuarioLogado != null) 
		return new ModelAndView(model, "view/home.vm");
	}
	
	public static ModelAndView login(Request req, Response res) {
		HashMap<String, Object> model = new HashMap<>();
		String email = req.queryParams("email");
		String senha = req.queryParams("password");
		System.out.println("login main " + email + " " + senha);
		if(email != null && senha != null) {
			usuarioLogado = (dao.getUsuario(email, senha));
			System.out.println(usuarioLogado);
			if(usuarioLogado != null) {
				return new ModelAndView(model, "view/home");
			}
		}
		return new ModelAndView(model, "view/login.vm");
	}
	
	public static ModelAndView cadastro(Request req, Response res) {
		HashMap<String, Object> model = new HashMap<>();
		
		return new ModelAndView(model, "view/cadastro.vm");
	}
	
	public static Object generateCadastro(Request req, Response res) {
		String nome = req.queryParams("nome");
		String email = req.queryParams("email");
		String password = req.queryParams("password");
		System.out.println(nome + " " + email + " " + password);
		dao.insert(new Usuario(nome, email, password));
		res.redirect("/login");
		return "ok";
	}
}
